authors: juan-arevalo
---
datetime: 2018-02-11 08:30:00 -0500
---
datetime_end: 2018-02-11 10:30:00 -0500
---
language: es
---
name: Aprendizaje supervisado con Scikit-learn, qué algoritmo usar y cómo exportarlo
---
room: h-workshop-room-5
---
type: workshop
---
summary: Exploraremos los diferentes algoritmos de clasificación y regresión que ofrece sckit-learn y sus diferentes parametros de configuración, como entender sus resultados y la visualización de los datos que se generan, al tiempo que entendemos cual es el apropiado a usar evaluando su error y exactitud
---
description: Toda persona que está iniciando con el análisis de grandes volumenes de datos en un momento determinado se encontrará con una pregunta crucial, ¿Qué herramienta o algoritmo debo emplear para este problema? Esta es sin duda alguna la pregunta que mejor debemos saber responder al comenzar a solucionar un problema. Scikit-learn ofrece diferentes modelos de regresión y clasificación, sobre los cuales se puede comenzar a explorar posibles soluciones, pero en cada uno puede recibir diferentes atributos que nos pueden llevar a la solución que buscamos. Por lo general podremos aplicar diferentes algoritmos y cada uno brindará una solución inicialmente válida para nuestro problema, y es allí donde se debe volver a evaluar cuál de las soluciones encontradas será la acertada, cada uno de los algoritmos nos puede reflejar el nivel de exactitud y error que generan, las que serán medidas que nos perfilarán el modelo o modelos perfectos para la solución del problema. Junto a las medidas de exactitud y error se encuentra la visualización de los datos, tanto de entrenamiento como de evaluación. En el taller partiremos importando los datos, visualizando su comportamiento, evaluaremos los diversos algoritmos posibles a usar, se aplicarán diferentes algoritmos y observaremos sus medidas de error y exactitud, junto con la visualización del comportamiento de los datos que genera el modelo, se seleccionará el que mejor resuelve el problema y por último exportaremos el modelo para que sea consumible desde bash y en la vida real.
